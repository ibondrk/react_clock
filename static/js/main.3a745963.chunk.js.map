{"version":3,"sources":["clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentDate","Date","timerId","this","window","setInterval","setState","prevClockName","clockName","prevDate","props","today","console","debug","info","toLocaleTimeString","clearInterval","className","Component","getRandomName","value","now","toString","slice","App","hasClock","clockId","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAyB,CACvBC,YAAa,IAAIC,MAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,YAAa,IAAIC,SAChC,OAVP,gCAaE,cAGS,IAFMM,EAEP,EAFJC,UACaC,EACT,EADJT,YAEMQ,EAAcL,KAAKO,MAAnBF,UACaG,EAAUR,KAAKJ,MAA5BC,YAEJO,IAAkBC,GACpBI,QAAQC,MAAR,uBAA8BN,EAA9B,eAAkDC,IAGhDC,IAAaE,GACfC,QAAQE,KAAKH,EAAMI,wBAzBzB,kCA6BE,WACEX,OAAOY,cAAcb,KAAKD,WA9B9B,oBAiCE,WACE,IAAQM,EAAcL,KAAKO,MAAnBF,UACAR,EAAgBG,KAAKJ,MAArBC,YAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,IAGF,YAED,sBAAMS,UAAU,cAAhB,SACGjB,EAAYe,8BA9CvB,GAA2BG,aCP3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAQX,IAAMI,EAAb,4MACEzB,MAAQ,CACNS,UAAW,UACXiB,UAAU,GAHd,EAMEC,aANF,IAsBEC,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKvB,SAAS,CACZmB,UAAU,KAzBhB,EA6BEK,UAAY,WACV,EAAKxB,SAAS,CACZmB,UAAU,KA/BhB,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,QAAS7B,KAAK2B,WACxCC,SAASC,iBAAiB,cAAe7B,KAAKwB,WAC9CxB,KAAKuB,QAAUtB,OAAOC,aAAY,kBAAM,EAAKC,SAC3C,CAAEE,UAAWW,QACZ,QAbP,kCAgBE,WACEY,SAASE,oBAAoB,QAAS9B,KAAK2B,WAC3CC,SAASE,oBAAoB,cAAe9B,KAAKwB,WACjDvB,OAAOY,cAAcb,KAAKuB,WAnB9B,oBAmCE,WACE,MAAgCvB,KAAKJ,MAA7BS,EAAR,EAAQA,UAAWiB,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAEEQ,GACE,cAAC,EAAD,CAAOjB,UAAWA,WA3C9B,GAAyBU,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.3a745963.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  currentDate: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentDate: new Date(),\n  };\n\n  timerId: number | undefined;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ currentDate: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    { clockName: prevClockName }: Readonly<Props>,\n    { currentDate: prevDate }: Readonly<State>,\n  ): void {\n    const { clockName } = this.props;\n    const { currentDate: today } = this.state;\n\n    if (prevClockName !== clockName) {\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n\n    if (prevDate !== today) {\n      console.info(today.toLocaleTimeString());\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { currentDate } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentDate.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockId: number | undefined;\n\n  componentDidMount() {\n    document.addEventListener('click', this.showClock);\n    document.addEventListener('contextmenu', this.hideClock);\n    this.clockId = window.setInterval(() => this.setState(\n      { clockName: getRandomName() },\n    ), 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.showClock);\n    document.removeEventListener('contextmenu', this.hideClock);\n    window.clearInterval(this.clockId);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {\n          hasClock && (\n            <Clock clockName={clockName} />\n          )\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}